https://leetcode.com/problems/3sum/description/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        int target = 0;
        int n = nums.size();
        for(int i=0;i<n;i++){
            if(i>0 && nums[i]==nums[i-1]) continue;
            int start = i+1;
            int end = n-1;
            while(start<end){
                int sum = nums[i];
                sum+= nums[start]+nums[end];
                if(sum == target) {
                    vector<int>temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[start]);
                    temp.push_back(nums[end]);
                    ans.push_back(temp);
                        int low = nums[start];
                        int high = nums[end];
                        start++,end--;
                        while(start < end and nums[start] == low) start++;
                        while(start < end and nums[end] == high) end--;
                }
                else if(sum > target) end--;
                else start++;
            }

        }
        return ans;
    }
};
